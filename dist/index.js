#!/usr/bin/env node
"use strict";var L=Object.create;var g=Object.defineProperty;var M=Object.getOwnPropertyDescriptor;var O=Object.getOwnPropertyNames;var q=Object.getPrototypeOf,B=Object.prototype.hasOwnProperty;var P=(a,e,o,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of O(e))!B.call(a,r)&&r!==o&&g(a,r,{get:()=>e[r],enumerable:!(t=M(e,r))||t.enumerable});return a};var y=(a,e,o)=>(o=a!=null?L(q(a)):{},P(e||!a||!a.__esModule?g(o,"default",{value:a,enumerable:!0}):o,a));var c=require("commander"),u=require("date-fns"),l=y(require("inquirer")),D=require("uuid");var f=require("drizzle-orm");var A=y(require("better-sqlite3")),C=require("dotenv/config"),w=require("drizzle-orm/better-sqlite3"),v=require("drizzle-orm/better-sqlite3/migrator"),x=new A.default(process.env.DB_FILE_NAME||"db.sqlite"),p=(0,w.drizzle)(x);(0,v.migrate)(p,{migrationsFolder:"./drizzle"});var i=require("drizzle-orm/sqlite-core"),d=(0,i.sqliteTable)("filmes",{id:(0,i.text)("id").primaryKey(),titulo:(0,i.text)("titulo").notNull(),diretor:(0,i.text)("diretor").notNull(),anoLancamento:(0,i.integer)("ano_lancamento").notNull(),genero:(0,i.text)("genero"),nota:(0,i.real)("nota"),dataAssistido:(0,i.text)("data_assistido")});var s=class{static async findAll(){return await p.select().from(d)}static async findById(e){return(await p.select().from(d).where((0,f.eq)(d.id,e)).limit(1))[0]??null}static async create(e){await p.insert(d).values(e)}static async update(e,o){let t=await p.update(d).set(o).where((0,f.eq)(d.id,e)).returning();if(t.length===0)throw new Error("Filme not found");return t[0]}static async delete(e){if((await p.delete(d).where((0,f.eq)(d.id,e)).returning()).length===0)throw new Error("Filme not found")}};async function F(){try{let a=await s.findAll();if(a.length===0){console.log(`
\u{1F3AC} Nenhum filme cadastrado.`);return}console.log(`
\u{1F3AC} Lista de Filmes:`),console.table(a)}catch(a){console.error(`
\u274C Erro ao listar filmes:`,a.message)}}async function h(a){let e=a;if(e||(e=(await l.default.prompt([{type:"input",name:"id",message:"Digite o ID (UUID) do filme:",validate:t=>t?!0:"O ID \xE9 obrigat\xF3rio."}])).id),e)try{let o=await s.findById(e);o?(console.log(`
\u{1F50E} Filme encontrado:`),console.table([o])):console.error(`
\u274C Filme n\xE3o encontrado.`)}catch(o){console.error(`
\u274C Erro ao buscar filme:`,o.message)}}async function b(){try{console.log(`
\u2795 Cadastrando um novo filme...`);let a=[{type:"input",name:"titulo",message:"T\xEDtulo:",validate:t=>t?!0:"Obrigat\xF3rio."},{type:"input",name:"diretor",message:"Diretor(a):",validate:t=>t?!0:"Obrigat\xF3rio."},{type:"input",name:"anoLancamento",message:"Ano de Lan\xE7amento:",validate:t=>{let r=parseInt(t),n=new Date().getFullYear();return isNaN(r)||t.length!==4?"Ano inv\xE1lido (deve ter 4 d\xEDgitos).":r>n?"O ano de lan\xE7amento n\xE3o pode ser no futuro.":!0}},{type:"input",name:"genero",message:"G\xEAnero (opcional):"},{type:"input",name:"nota",message:"Nota (0-10, opcional):",validate:t=>{if(t==="")return!0;let r=parseFloat(t);return!isNaN(r)&&r>=0&&r<=10?!0:"Nota inv\xE1lida. Deve ser entre 0 e 10."}},{type:"input",name:"dataAssistido",message:"Data Assistido (DD/MM/AAAA, opcional):",validate:t=>{if(t==="")return!0;let r=(0,u.parse)(t,"dd/MM/yyyy",new Date);return(0,u.isValid)(r)?(0,u.isFuture)(r)?"A data n\xE3o pode ser no futuro.":!0:"Formato inv\xE1lido. Use DD/MM/AAAA"}}],e=await l.default.prompt(a),o={id:(0,D.v4)(),titulo:e.titulo,diretor:e.diretor,anoLancamento:parseInt(e.anoLancamento),genero:e.genero||null,nota:e.nota?parseFloat(e.nota):null,dataAssistido:e.dataAssistido||null};await s.create(o),console.log(`
\u2705 Filme cadastrado com sucesso!`)}catch(a){console.error(`
\u274C Erro ao cadastrar o filme:`,a.message)}}async function I(){try{let{id:a}=await l.default.prompt([{type:"input",name:"id",message:"Digite o ID do filme para atualizar:",validate:n=>n?!0:"O ID \xE9 obrigat\xF3rio."}]),e=await s.findById(a);if(!e){console.error(`
\u274C Filme n\xE3o encontrado.`);return}console.log(`
\u{1F504} Atualizando filme (pressione Enter para manter o valor atual):`);let o=[{type:"input",name:"titulo",message:`T\xEDtulo [${e.titulo}]:`,default:e.titulo},{type:"input",name:"diretor",message:`Diretor(a) [${e.diretor}]:`,default:e.diretor},{type:"input",name:"anoLancamento",message:`Ano [${e.anoLancamento}]:`,default:String(e.anoLancamento),validate:n=>{if(n==="")return!0;let m=parseInt(n),E=new Date().getFullYear();return isNaN(m)||n.length!==4?"Ano inv\xE1lido.":m>E?"O ano de lan\xE7amento n\xE3o pode ser no futuro.":!0}},{type:"input",name:"genero",message:`G\xEAnero [${e.genero||"N/A"}]:`,default:e.genero??""},{type:"input",name:"nota",message:`Nota [${e.nota||"N/A"}]:`,default:e.nota?String(e.nota):"",validate:n=>{if(n==="")return!0;let m=parseFloat(n);return!isNaN(m)&&m>=0&&m<=10?!0:"Nota deve ser entre 0 e 10."}},{type:"input",name:"dataAssistido",message:`Data Assistido [${e.dataAssistido||"N/A"}]:`,default:e.dataAssistido??"",validate:n=>{if(n==="")return!0;let m=(0,u.parse)(n,"dd/MM/yyyy",new Date);return(0,u.isValid)(m)?(0,u.isFuture)(m)?"A data n\xE3o pode ser no futuro.":!0:"Formato inv\xE1lido. Use DD/MM/AAAA"}}],t=await l.default.prompt(o),r={titulo:t.titulo,diretor:t.diretor,anoLancamento:parseInt(t.anoLancamento),genero:t.genero||null,nota:t.nota?parseFloat(t.nota):null,dataAssistido:t.dataAssistido||null};await s.update(a,r),console.log(`
\u2705 Filme atualizado com sucesso!`)}catch(a){console.error(`
\u274C Erro ao atualizar filme:`,a.message)}}async function N(){try{let{id:a}=await l.default.prompt([{type:"input",name:"id",message:"Digite o ID do filme para deletar:",validate:t=>t?!0:"O ID \xE9 obrigat\xF3rio."}]),e=await s.findById(a);if(!e){console.error(`
\u274C Filme n\xE3o encontrado.`);return}let{confirmar:o}=await l.default.prompt([{type:"confirm",name:"confirmar",message:`Tem certeza que deseja deletar "${e.titulo}"?`,default:!1}]);o?(await s.delete(a),console.log(`
\u{1F5D1}\uFE0F Filme deletado com sucesso!`)):console.log(`
Opera\xE7\xE3o cancelada.`)}catch(a){console.error(`
\u274C Erro ao deletar filme:`,a.message)}}async function z(){let a=[{type:"list",name:"action",message:"O que deseja fazer?",choices:[{name:"\u{1F4CB} Listar todos os filmes",value:"listar"},{name:"\u2795 Cadastrar um novo filme",value:"cadastrar"},{name:"\u{1F50D} Buscar um filme por ID",value:"buscar"},{name:"\u{1F504} Atualizar um filme",value:"atualizar"},{name:"\u{1F5D1}\uFE0F Deletar um filme",value:"deletar"},new l.default.Separator,{name:"\u274C Sair",value:"sair"}]}],{action:e}=await l.default.prompt(a);switch(e){case"listar":await F();break;case"cadastrar":await b();break;case"buscar":await h();break;case"atualizar":await I();break;case"deletar":await N();break;case"sair":console.log(`
\u{1F44B} At\xE9 logo!`),process.exit(0)}let{again:o}=await l.default.prompt([{type:"confirm",name:"again",message:`
Deseja realizar outra opera\xE7\xE3o?`,default:!0}]);o?await z():console.log(`
\u{1F44B} At\xE9 logo!`)}c.program.version("1.0.0").description("Gerenciador de Filmes via CLI");c.program.command("listar").description("Lista todos os filmes").action(F);c.program.command("cadastrar").description("Cadastra um novo filme").action(b);c.program.command("buscar [id]").description("Busca um filme pelo ID (opcional)").action(h);c.program.command("atualizar").description("Atualiza os dados de um filme").action(I);c.program.command("deletar").description("Deleta um filme").action(N);process.argv.length<=2?z():c.program.parse(process.argv);
